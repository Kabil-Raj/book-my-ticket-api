# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: BookMyTicketAPI CI/CD 

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 1.8
      uses: actions/setup-java@v3
      with:
        java-version: '1.8'
        server-id: docker.io
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
        cache: maven
        
    - name: Build with Maven
      run: mvn package dockerfile:psuh --file BookMyTicketServiceRegistry/pom.xml
      env:
          MAVEN_USERNAME: ${{secrets.DOCKER_USERNAME}}
          MAVEN_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
    - name: Build with Maven
      run: mvn package dockerfile:psuh --file BookMyTicketConfigServer/pom.xml
      env:
          MAVEN_USERNAME: ${{secrets.DOCKER_USERNAME}}
          MAVEN_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
    - name: Build with Maven
      run: mvn package dockerfile:psuh --file BookMyTicketAPIGateway/pom.xml
      env:
          MAVEN_USERNAME: ${{secrets.DOCKER_USERNAME}}
          MAVEN_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
    - name: Build with Maven
      run: mvn package dockerfile:psuh --file BookMyTicket/pom.xml
      env:
          MAVEN_USERNAME: ${{secrets.DOCKER_USERNAME}}
          MAVEN_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
    - name: Build with Maven
      run: mvn package dockerfile:psuh --file MovieService/pom.xml
      env:
          MAVEN_USERNAME: ${{secrets.DOCKER_USERNAME}}
          MAVEN_PASSWORD: ${{secrets.DOCKER_PASSWORD}}

  Deploy:    
